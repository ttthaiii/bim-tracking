import React from 'react';

interface TimeSelectorProps {
  regularValue: string;
  otValue: string;
  onRegularChange: (value: string) => void;
  onOtChange: (value: string) => void;
}

export const TimeSelector: React.FC<TimeSelectorProps> = ({
  regularValue,
  otValue,
  onRegularChange,
  onOtChange,
}) => {
  const hours = Array.from({ length: 8 }, (_, i) => i + 1);
  const minutes = [
    { value: '00', label: '00' },
    { value: '15', label: '15' },
    { value: '30', label: '30' },
    { value: '45', label: '45' }
  ];

  const [regularHour, regularMinute] = regularValue ? regularValue.split(':') : ['', ''];
  const [otHour, otMinute] = otValue ? otValue.split(':') : ['', ''];

  const TimeInput = ({ hour, minute, onTimeChange }: {
    hour: string;
    minute: string;
    onTimeChange: (value: string) => void;
  }) => (
    <div className="flex items-center gap-2">
      <div className="relative">
        <select
          value={hour}
          onChange={(e) => {
            const newHour = e.target.value;
            const newMinute = minute || '00';
            onTimeChange(`${newHour}:${newMinute}`);
          }}
          className="appearance-none border rounded px-2 py-1 pr-8 bg-white hover:border-gray-400 focus:outline-none focus:border-blue-500"
        >
          <option value="">ชั่วโมง</option>
          {hours.map((h) => (
            <option key={h} value={h.toString().padStart(2, '0')}>
              {h} ชั่วโมง
            </option>
          ))}
        </select>
        <div className="absolute inset-y-0 right-2 flex items-center pointer-events-none">
          <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 9l-7 7-7-7" />
          </svg>
        </div>
      </div>

      <div className="relative">
        <select
          value={minute}
          onChange={(e) => {
            const newMinute = e.target.value;
            const newHour = hour || '00';
            onTimeChange(`${newHour}:${newMinute}`);
          }}
          className="appearance-none border rounded px-2 py-1 pr-8 bg-white hover:border-gray-400 focus:outline-none focus:border-blue-500"
        >
          <option value="">นาที</option>
          {minutes.map((m) => (
            <option key={m.value} value={m.value}>
              {m.label} นาที
            </option>
          ))}
        </select>
        <div className="absolute inset-y-0 right-2 flex items-center pointer-events-none">
          <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 9l-7 7-7-7" />
          </svg>
        </div>
      </div>
    </div>
  );

  return (
    <div className="grid grid-cols-2 gap-4">
      {/* Column 1 - Regular Working Hours */}
      <div className="flex items-center gap-4">
        <TimeInput
          hour={regularHour}
          minute={regularMinute}
          onTimeChange={onRegularChange}
        />
        <div className="flex gap-2 items-center">
          <span className="text-sm text-gray-600 whitespace-nowrap">เวลาทำงานปกติ</span>
          <div className="relative w-20">
            <input
              type="text"
              value="100%"
              readOnly
              className="w-full appearance-none border rounded px-2 py-1 bg-white"
            />
          </div>
        </div>
      </div>

      {/* Column 2 - Overtime Hours */}
      <div className="flex items-center gap-4">
        <TimeInput
          hour={otHour}
          minute={otMinute}
          onTimeChange={onOtChange}
        />
        <div className="flex gap-2 items-center">
          <span className="text-sm text-gray-600 whitespace-nowrap">เวลาทำงานช่วงโอที</span>
          <div className="relative w-20">
            <input
              type="text"
              value="100%"
              readOnly
              className="w-full appearance-none border rounded px-2 py-1 bg-white"
            />
          </div>
        </div>
      </div>
    </div>
  );
};